generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id         Int      @id @unique @default(autoincrement())
  name       String   @unique
  users      User[]
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("roles")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String
  password     String
  full_name    String
  phone_number String
  image_url    String         @default("")
  gender       Int            @default(1)
  money        Int            @default(0)
  role_id      Int?           @default(2)
  role         Role?          @relation(fields: [role_id], references: [id], onDelete: Cascade)
  chargHistory ChargHistory[]
  buy          Buy[]
  created_at   DateTime       @default(now())
  updated_at   DateTime       @default(now()) @updatedAt

  @@unique([email])
  @@map("users")
}

model Product {
  id             Int       @id @unique @default(autoincrement())
  name           String    @unique @db.VarChar(250)
  price          String    @default("")
  image_url      String    @default("")
  description_kh String?   @default("") @db.VarChar(1000)
  description_en String?   @default("") @db.VarChar(1000)
  categoryId     Int?      @default(1)
  category       Category? @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  buy            Buy[]
  created_at     DateTime  @default(now())
  updated_at     DateTime  @default(now()) @updatedAt()

  @@map("products")
}

model Category {
  id       Int       @id @unique @default(autoincrement())
  name     String    @db.VarChar(250)
  products Product[]

  @@unique([name])
  @@map("categories")
}

model ChargHistory {
  id       Int      @id @unique @default(autoincrement())
  amount   String   @db.VarChar(250)
  date     DateTime @default(now())
  currency String   @db.VarChar(250)
  user_id  Int?
  user     User?    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("chargHistories")
}

model Buy {
  id         Int      @id @unique @default(autoincrement())
  date       DateTime @default(now())
  user_id    Int?
  user       User?    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  product_id Int?
  product    Product? @relation(fields: [product_id], references: [id], onDelete: SetNull)
  amount     String

  @@map("buys")
}

model Notification {
  id    Int      @id @unique @default(autoincrement())
  date  DateTime @default(now())
  title String
  body  String
  saw   Boolean  @default(false)

  @@map("notifications")
}
